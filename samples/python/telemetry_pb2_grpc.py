# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
import messages_pb2 as messages__pb2


class TelemetryServStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetForDate = channel.unary_unary(
                '/secondvariety.TelemetryServ/GetForDate',
                request_serializer=google_dot_protobuf_dot_timestamp__pb2.Timestamp.SerializeToString,
                response_deserializer=messages__pb2.GTelemetrys.FromString,
                )
        self.GetById = channel.unary_unary(
                '/secondvariety.TelemetryServ/GetById',
                request_serializer=messages__pb2.GObjectId.SerializeToString,
                response_deserializer=messages__pb2.GTelemetry.FromString,
                )
        self.GetForPeriod = channel.unary_unary(
                '/secondvariety.TelemetryServ/GetForPeriod',
                request_serializer=messages__pb2.GTelemetryPeriod.SerializeToString,
                response_deserializer=messages__pb2.GTelemetrys.FromString,
                )
        self.GetForPeriodForObjectByKod = channel.unary_unary(
                '/secondvariety.TelemetryServ/GetForPeriodForObjectByKod',
                request_serializer=messages__pb2.GTelemetryPeriodForObject.SerializeToString,
                response_deserializer=messages__pb2.GTelemetrys.FromString,
                )
        self.GetForPeriodForObjectWarning4 = channel.unary_unary(
                '/secondvariety.TelemetryServ/GetForPeriodForObjectWarning4',
                request_serializer=messages__pb2.GTelemetryPeriodForObject.SerializeToString,
                response_deserializer=messages__pb2.GTelemetryTwoTypes.FromString,
                )
        self.GetLastTrainedRecId = channel.unary_unary(
                '/secondvariety.TelemetryServ/GetLastTrainedRecId',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.GObjectId.FromString,
                )
        self.TrainingObj = channel.unary_unary(
                '/secondvariety.TelemetryServ/TrainingObj',
                request_serializer=messages__pb2.GObjectId.SerializeToString,
                response_deserializer=messages__pb2.Empty.FromString,
                )
        self.UploadTelemetry = channel.stream_unary(
                '/secondvariety.TelemetryServ/UploadTelemetry',
                request_serializer=messages__pb2.GWitsml.SerializeToString,
                response_deserializer=messages__pb2.GUploadCount.FromString,
                )
        self.CheckingObj = channel.unary_unary(
                '/secondvariety.TelemetryServ/CheckingObj',
                request_serializer=messages__pb2.GObjectId.SerializeToString,
                response_deserializer=messages__pb2.Empty.FromString,
                )
        self.Post = channel.unary_unary(
                '/secondvariety.TelemetryServ/Post',
                request_serializer=messages__pb2.GTelemetry.SerializeToString,
                response_deserializer=messages__pb2.GTelemetry.FromString,
                )
        self.Put = channel.unary_unary(
                '/secondvariety.TelemetryServ/Put',
                request_serializer=messages__pb2.GTelemetry.SerializeToString,
                response_deserializer=messages__pb2.GTelemetry.FromString,
                )
        self.Delete = channel.unary_unary(
                '/secondvariety.TelemetryServ/Delete',
                request_serializer=messages__pb2.GObjectId.SerializeToString,
                response_deserializer=messages__pb2.Empty.FromString,
                )


class TelemetryServServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetForDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetForPeriod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetForPeriodForObjectByKod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetForPeriodForObjectWarning4(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastTrainedRecId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrainingObj(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadTelemetry(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckingObj(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TelemetryServServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetForDate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetForDate,
                    request_deserializer=google_dot_protobuf_dot_timestamp__pb2.Timestamp.FromString,
                    response_serializer=messages__pb2.GTelemetrys.SerializeToString,
            ),
            'GetById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetById,
                    request_deserializer=messages__pb2.GObjectId.FromString,
                    response_serializer=messages__pb2.GTelemetry.SerializeToString,
            ),
            'GetForPeriod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetForPeriod,
                    request_deserializer=messages__pb2.GTelemetryPeriod.FromString,
                    response_serializer=messages__pb2.GTelemetrys.SerializeToString,
            ),
            'GetForPeriodForObjectByKod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetForPeriodForObjectByKod,
                    request_deserializer=messages__pb2.GTelemetryPeriodForObject.FromString,
                    response_serializer=messages__pb2.GTelemetrys.SerializeToString,
            ),
            'GetForPeriodForObjectWarning4': grpc.unary_unary_rpc_method_handler(
                    servicer.GetForPeriodForObjectWarning4,
                    request_deserializer=messages__pb2.GTelemetryPeriodForObject.FromString,
                    response_serializer=messages__pb2.GTelemetryTwoTypes.SerializeToString,
            ),
            'GetLastTrainedRecId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastTrainedRecId,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=messages__pb2.GObjectId.SerializeToString,
            ),
            'TrainingObj': grpc.unary_unary_rpc_method_handler(
                    servicer.TrainingObj,
                    request_deserializer=messages__pb2.GObjectId.FromString,
                    response_serializer=messages__pb2.Empty.SerializeToString,
            ),
            'UploadTelemetry': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadTelemetry,
                    request_deserializer=messages__pb2.GWitsml.FromString,
                    response_serializer=messages__pb2.GUploadCount.SerializeToString,
            ),
            'CheckingObj': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckingObj,
                    request_deserializer=messages__pb2.GObjectId.FromString,
                    response_serializer=messages__pb2.Empty.SerializeToString,
            ),
            'Post': grpc.unary_unary_rpc_method_handler(
                    servicer.Post,
                    request_deserializer=messages__pb2.GTelemetry.FromString,
                    response_serializer=messages__pb2.GTelemetry.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=messages__pb2.GTelemetry.FromString,
                    response_serializer=messages__pb2.GTelemetry.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=messages__pb2.GObjectId.FromString,
                    response_serializer=messages__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'secondvariety.TelemetryServ', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TelemetryServ(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetForDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/GetForDate',
            google_dot_protobuf_dot_timestamp__pb2.Timestamp.SerializeToString,
            messages__pb2.GTelemetrys.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/GetById',
            messages__pb2.GObjectId.SerializeToString,
            messages__pb2.GTelemetry.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetForPeriod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/GetForPeriod',
            messages__pb2.GTelemetryPeriod.SerializeToString,
            messages__pb2.GTelemetrys.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetForPeriodForObjectByKod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/GetForPeriodForObjectByKod',
            messages__pb2.GTelemetryPeriodForObject.SerializeToString,
            messages__pb2.GTelemetrys.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetForPeriodForObjectWarning4(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/GetForPeriodForObjectWarning4',
            messages__pb2.GTelemetryPeriodForObject.SerializeToString,
            messages__pb2.GTelemetryTwoTypes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastTrainedRecId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/GetLastTrainedRecId',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            messages__pb2.GObjectId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrainingObj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/TrainingObj',
            messages__pb2.GObjectId.SerializeToString,
            messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadTelemetry(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/secondvariety.TelemetryServ/UploadTelemetry',
            messages__pb2.GWitsml.SerializeToString,
            messages__pb2.GUploadCount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckingObj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/CheckingObj',
            messages__pb2.GObjectId.SerializeToString,
            messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/Post',
            messages__pb2.GTelemetry.SerializeToString,
            messages__pb2.GTelemetry.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/Put',
            messages__pb2.GTelemetry.SerializeToString,
            messages__pb2.GTelemetry.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secondvariety.TelemetryServ/Delete',
            messages__pb2.GObjectId.SerializeToString,
            messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
